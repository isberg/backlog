# This references the default nodejs container from
# the Docker Hub: https://registry.hub.docker.com/_/node/
# If you want Nodesource's container you would reference nodesource/node
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: node
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongo
    # http://devcenter.wercker.com/docs/services/mongodb.html
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # A step that executes `npm install` command
    - npm-install
    # A step that executes `npm test` command
    #- npm-test

    # A custom script step, name value is used in the UI
    # and the code value contains the command that get executed
    - script:
        name: echo nodejs information
        code: |
          echo "node version $(node -v) running"
          echo "npm version $(npm -v) running"
          
# http://devcenter.wercker.com/docs/workflows
deploy:
  box:
    id: nginx:alpine
    cmd: /bin/sh

  steps:
    - script:
        name: cleanup build result
        code: |
          rm -rf *
    - script:
      name: debug
      code: echo $USERNAME
      
    # push container as-is
    - internal/docker-push:
        disable-sync: true
        username: $USERNAME
        password: $PASSWORD
        port: 8000
        tag: latest, $WERCKER_GIT_COMMIT, $WERCKER_GIT_BRANCH
        repository: isberg/backlog        
